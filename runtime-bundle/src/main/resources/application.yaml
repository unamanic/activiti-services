spring:
  application:
    name: runtime-bundle
authorizations:
  security-constraints:
    - authRoles:
        - ${ACT_KEYCLOAK_USER_ROLE:ACTIVITI_USER}
      patterns:
        - ${ACT_KEYCLOAK_PATTERNS:/v1/*}
    - authRoles:
        - ${ACT_KEYCLOAK_ADMIN_ROLE:ACTIVITI_ADMIN}
      patterns:
        - /admin/*

activiti:
  cloud:
    application:
      name: runtime-bundle
    services:
      oauth2.iam-name: keycloak
  keycloak:
    client-id: ${ACTIVITI_KEYCLOAK_CLIENT_ID:activiti-keycloak}
    client-secret: ${ACTIVITI_KEYCLOAK_CLIENT_SECRET:545bc187-f10f-41f9-8d5f-cfca3dbada9c}

spring.security.oauth2.resourceserver.jwt.issuer-uri: ${keycloak.auth-server-url}/realms/${keycloak.realm}
spring.security.oauth2.resourceserver.jwt.jwk-set-uri: ${keycloak.auth-server-url}/realms/${keycloak.realm}/protocol/openid-connect/certs

spring.security.oauth2.client.registration.keycloak.client-id: ${activiti.keycloak.client-id}
spring.security.oauth2.client.registration.keycloak.client-secret: ${activiti.keycloak.client-secret}
spring.security.oauth2.client.registration.keycloak.authorization-grant-type: ${activiti.keycloak.grant-type}
spring.security.oauth2.client.registration.keycloak.scope: openid

spring.security.oauth2.client.provider.keycloak.authorization-uri: ${keycloak.auth-server-url}/realms/${keycloak.realm}/protocol/openid-connect/authorize
spring.security.oauth2.client.provider.keycloak.token-uri: ${keycloak.auth-server-url}/realms/${keycloak.realm}/protocol/openid-connect/token


